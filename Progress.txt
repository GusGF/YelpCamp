407. Creating the basic express app
===================================
install npm packages express, mongoose & ejs
Import express into our app and create an instance
Setup express (our server) to listen on port 3000 for HTTP requests
Register a simple HTTP get request and send a simple response back to the requester
Create a views directory to facilitate our templating engine:
	Within create a dummy file called 'home.ejs' with some basic HTML
We're going to be using a templating engine:
	Tell express what templating engine we're using
	Import the path module and use it to then tell express where our templates (views) will be
Call a simple template file called 'home.ejs' and render it


408. Campground Model Basics (Mongoose)
=======================================
Create a directory for our Mongoose models:
	Within this directory create campground.js
Require Mongoose
Create a schema called 'campGroundSchema' as follows:
  title: String,
  price: String,
  description: String,
  location: String
Based on the schema create a model and export it
Create a mongoose instance and connect to it:
	mongoose.connect('mongodb://localhost:27017/yelp-campDB', { 
	  useNewUrlParser: true,
	  useCreateIndex: true, 
	  useUnifiedTopology: true});
Assess whether the DB connection is good or there is an error:
	Set a variable for the Mongoose connection
	If there is an error report it to the console
	If the connection is open report this success to the console
Create a simple 'get' route for when a campground is created '/makecampground'
	Locically it should be a 'post' route but don't worry about this for now.
You will need to require the 'CampGround' model to work with it
Use the 'CampGround' model to create a campground under the above route
	Use the above route to view the object in the browser


409. Seeding Campgrounds
========================
We want to create a file ('index.js' below) solely to clear out then seed our database when reqd
Use the following link to get the data files:
	https://github.com/Colt/YelpCamp/tree/c12b6ca9576b48b579bc304f701ebb71d6f9879a/seeds
From the above location copy files 'cities.js' & 'seedHelpers.js' to a new folder called 'seeds'
In the seeds folder create a file called 'index.js', use this to:
	Connect to mongoose and validate your DB connection
	Create an async function 'seedDB()' to: 
		Clear the campgrounds collection
		Import cities:
			Use a for-loop to bring the cities array in from 'cities.js'
				Access the array randomly
				Combine 'city' & 'state' fields and assign to 'location'
			Run seeds/index.js using node, not nodemon
		Now import arrays 'descriptors' & 'places' from seedHelpers.js using destructuring:
			Create a generic function to:
				Which will accept either array as an argument
				Randomly select a value from each
				Combine these values to make a 'title'
				And you should end up with something like this in your 'campgrounds' collection:
{ ..., "title" : "Maple Hunting Camp", "location" : "Plymouth, Minnesota", "__v" : 0 }
{ ..., "title" : "Elk Mule Camp", "location" : "Newark, New Jersey", "__v" : 0 }
{ ..., "title" : "Forest Bay", "location" : "Lawrence, Massachusetts", "__v" : 0 }
{ ..., "title" : "Diamond Creek", "location" : "Shelton, Connecticut", "__v" : 0 }
	If 'seedDB()' has created the above i.e. has run successfully then it will have returned a promise:
		Use this to close the DB connection
	
	
410. Campground Index
=====================